#Defining dataset class

import torch
import random
import torchvision
from torch.utils.data import Dataset
import torchvision.transforms as transforms
from torch.utils.data import Dataset, DataLoader, random_split, SubsetRandomSampler, WeightedRandomSampler

################# Creating training dataset class #################

class Dataset_train(Dataset):
    
    def __init__(self):

        transform_train = transforms.Compose([
                                            transforms.RandomCrop(32, padding=4),
                                            transforms.RandomHorizontalFlip(),
                                            transforms.ToTensor(),
                                            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                                            ])

        self.cifar = torchvision.datasets.CIFAR10(root='../', train=True, download=True, transform=transform_train)
        
    def __getitem__(self, index):
        data, target = self.cifar[index]
                
        return data, target, index

    def __len__(self):
        return len(self.cifar)

################# Creating test dataset class #################

class Dataset_test(Dataset):
    
    def __init__(self):

        transform_test = transforms.Compose([
                                            transforms.ToTensor(),
                                            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                                            ])

        self.cifar = torchvision.datasets.CIFAR10(root='../', train=False, download=True, transform=transform_test)
        
    def __getitem__(self, index):
        data, target = self.cifar[index]
                
        return data, target, index

    def __len__(self):
        return len(self.cifar)

#Custom BatchSampler
class RandomBatchSampler(torch.utils.data.Sampler):

    def __init__(self, batch_sampler):
        self.batch_sampler = batch_sampler

    def __iter__(self):
        randind = random.sample(list(self.batch_sampler),len(self.batch_sampler))
        return iter(randind)

    def __len__(self):
        return len(self.batch_sampler)

class Dataset(object):

    def __init__(self,confdata):

        self.trainset = Dataset_train()
        self.testset = Dataset_test()
        self.confdata = confdata


    def load_data(self):

        sampler = RandomBatchSampler(torch.utils.data.sampler.BatchSampler(torch.utils.data.sampler.SequentialSampler(self.trainset),batch_size=self.confdata['trainbatch'],drop_last=False))
        trainloader = torch.utils.data.DataLoader(self.trainset,batch_sampler=sampler)
        ######## Subset of test set indices to be used for computing value function #########
        #subset_indices = [3, 4432, 2934, 9557, 6161, 4902, 5178, 4813, 7521, 427, 3903, 8324, 581, 6663, 9665, 5143, 713, 8651, 2048, 8122, 6531, 9995, 2692, 1454, 1927, 4028, 1746, 5668, 4647, 5379, 9810, 2178, 7842, 4627, 5846, 4619, 9867, 6945, 7500, 1868, 9255, 6815, 4012, 3530, 9197, 803, 1077, 1344, 2099, 1820, 8181, 3796, 8266, 9014, 101, 8427, 8292, 4778, 2963, 8925, 6048, 8583, 8467, 5481, 7757, 5966, 9908, 3633, 5319, 5299, 8301, 563, 902, 3362, 6499, 5131, 4175, 4023, 6190, 6846, 3183, 9629, 5750, 3826, 8276, 108, 3969, 8590, 2506, 6955, 746, 9317, 6542, 7853, 3613, 4560, 966, 8332, 3644, 9894, 7449, 8870, 4440, 7861, 395, 6415, 1084, 3380, 3665, 9248, 8312, 3438, 9960, 1977, 1812, 1924, 2954, 5116, 7928, 3879, 8949, 4978, 1305, 2111, 9439, 9479, 5658, 4271, 9261, 2393, 2813, 6533, 8694, 2004, 9080, 6640, 3420, 3514, 2360, 3701, 4094, 15, 1200, 2040, 5280, 1467, 299, 9232, 7903, 7408, 9617, 5894, 426, 4816, 9022, 7568, 9051, 3880, 4013, 6148, 8584, 2850, 1325, 1995, 1942, 7327, 1969, 6098, 5801, 8985, 1115, 3317, 2284, 5331, 3757, 5601, 2011, 9430, 2092, 8489, 7, 4185, 9417, 4941, 6337, 8091, 4468, 589, 6965, 3130, 8866, 6679, 3035, 4474, 2321, 4858, 7367, 2217, 4892, 8239, 5950, 3758, 6029, 2275, 7484, 2681, 3679, 2228, 510, 9874, 1827, 3587, 8127, 4521, 9738, 2436, 7957, 7096, 2477, 8205, 5489, 5895, 3875, 8767, 406, 9050, 9406, 6115, 3234, 1865, 2002, 5660, 7112, 347, 9581, 1087, 948, 801, 3192, 8072, 3590, 5936, 8480, 9841, 6911, 485, 4764, 1967, 8512, 7008, 5903, 8508, 3948, 1947, 9383, 7527, 9058, 3855, 2890, 2697, 2126, 2896, 3471, 5873, 8368, 721, 6588, 88, 229, 8013, 6191, 3893, 1709, 7567, 641, 7557, 2212, 6142, 8947, 8952, 1291, 5373, 999, 2279, 1357, 8833, 5172, 5340, 946, 1282, 6557, 7618, 508, 7425, 9334, 9641, 6750, 9178, 3017, 1225, 8502, 8503, 598, 5508, 8259, 6347, 7092, 2644, 6135, 6265, 8390, 6565, 4673, 5683, 9932, 382, 6036, 4077, 4470, 8693, 5312, 3790, 1097, 3674, 4963, 1175, 7292, 3765, 4358, 9019, 4318, 1708, 9880, 2589, 8751, 9789, 8960, 3786, 7947, 5603, 4234, 8699, 1886, 2193, 1807, 9988, 5496, 1196, 5261, 9975, 9288, 5537, 2715, 6149, 8812, 7651, 9328, 1491, 538, 3967, 6975, 1556, 2207, 1723, 5332, 8692, 3048, 4944, 4523, 9715, 1795, 3774, 4155, 6779, 1091, 354, 3921, 7139, 4831, 5158, 4508, 7536, 8328, 8669, 8592, 744, 6365, 8293, 4776, 740, 2873, 3823, 2345, 2396, 134, 1076, 8797, 7724, 7181, 7221, 9821, 6864, 4056, 5139, 4091, 9303, 3002, 9134, 1909, 4170, 6394, 8477, 913, 1910, 9268, 8250, 112, 5380, 8474, 3087, 3372, 2892, 249, 9689, 7827, 3102, 4342, 4102, 9726, 6223, 3589, 3573, 4599, 670, 8664, 4927, 8624, 7589, 3325, 8564, 9005, 5527, 7288, 2095, 1933, 5180, 4740, 7176, 7374, 8524, 6785, 261, 9974, 9691, 518, 8874, 4495, 4043, 1194, 7213, 2651, 4757, 448, 7843, 2539, 3792, 8957, 7786, 7033, 6596, 7115, 1378, 4695, 7475, 3994, 8448, 5309, 4485, 8561, 727, 591, 5198, 8006, 9576, 4277, 1692, 4501, 3619, 7710, 7081, 2625, 5478, 5141, 7569, 423, 1106, 3562, 7979, 2032, 9235, 2711, 6109, 8571, 1223, 4399, 7289, 6901, 7712, 2538, 4693, 4240, 3388, 1233, 8194, 865, 6584, 4076, 2258, 8017, 691, 6042, 2047, 2901, 836, 1075, 3808, 4284, 6938, 901, 5376, 3754, 1564, 5334, 9666, 1614, 4988, 5641, 5000, 665, 4255, 6417, 941, 558, 2744, 2521, 1651, 457, 9956, 4592, 7120, 6418, 1253, 4993, 200, 6788, 3468, 3813, 7630, 5940, 5130, 6004, 7373, 6985, 5480, 1059, 1576, 4756, 9997, 7325, 1125, 7620, 1616, 9219, 5599, 4004, 8009, 9939, 6095, 5724, 93, 2281, 9594, 9788, 7868, 2449, 5009, 3013, 3165, 4002, 4964, 9998, 6257, 4330, 7116, 6404, 1141, 4936, 1386, 111, 4797, 9365, 6054, 5842, 3544, 7080, 3563, 5626, 850, 3344, 4192, 4152, 9714, 9064, 971, 628, 7316, 3628, 53, 8755, 3678, 3294, 1622, 4672, 6243, 2327, 2548, 6269, 8744, 8216, 9539, 3280, 3949, 4295, 9837, 6805, 4510, 4881, 8763, 2266, 4666, 6540, 1654, 2192, 4855, 6277, 8956, 7650, 6012, 1889, 4814, 8131, 3531, 2911, 1921, 9001, 5155, 7402, 7663, 3870, 9978, 3831, 6657, 403, 1045, 8894, 4314, 334, 6618, 2788, 3498, 2465, 1689, 7775, 6999, 846, 3379, 5276, 9559, 8612, 8766, 4884, 8336, 474, 7003, 5209, 1332, 6227, 963, 6147, 2600, 4444, 957, 951, 5645, 8044, 9878, 7614, 4811, 6340, 5757, 6551, 260, 787, 8190, 1888, 5638, 7217, 9712, 7662, 5640, 8971, 784, 7323, 7816, 5939, 9084, 8924, 4053, 6189, 7332, 4380, 4940, 7004, 3608, 9482, 8671, 7048, 1524, 6904, 1938, 6468, 4210, 1857, 399, 9437, 4867, 4121, 9153, 2385, 3392, 984, 1973, 3314, 6346, 2665, 2519, 8543, 682, 9138, 6852, 8788, 9354, 378, 7516, 3477, 4000, 9391, 4367, 4183, 7070, 9459, 8980, 6338, 6939, 2283, 9650, 1663, 1960, 2316, 3992, 2536, 7207, 8357, 6152, 2840, 3242, 3733, 9936, 3104, 32, 295, 6395, 5740, 9446, 8522, 9463, 8896, 1799, 6762, 4409, 1769, 648, 7700, 525, 2531, 3670, 8139, 5773, 8364, 5338, 4016, 7791, 8932, 8140, 4336, 2072, 6895, 521, 1184, 8995, 1624, 5534, 7333, 5113, 4585, 372, 7951, 3240, 5164, 1631, 4889, 6694, 1399, 2700, 8780, 7603, 9876, 364, 925, 2042, 4846, 5069, 9976, 6821, 3407, 7127, 3911, 2507, 6568, 2199, 1220, 5647, 2005, 7532, 2177, 6856, 6756, 9168, 1615, 2887, 4624, 2096, 7314, 9887, 1470, 3503, 5012, 8281, 7817, 3064, 2181, 3868, 8261, 6274, 6435, 9812, 7031, 5871, 1536, 5834, 9868, 8906, 4808, 604, 330, 2510, 3500, 2257, 8803, 9379, 9239, 97, 8554, 4411, 3403, 7937, 7668, 3356, 6794, 8865, 3663, 9130, 8111, 7024, 6986, 5685, 7654, 9361, 8533, 4914, 8774, 4106, 9024, 6240, 1884, 6913, 4915, 2075, 4573, 4350, 6590, 2927, 777, 5149, 449, 3984, 3522, 6617, 4827, 9621, 8446, 6659, 6295, 6535, 593, 838, 1066, 6015, 1031, 9873, 2741, 6412, 820, 2425, 4918, 2705, 5745, 367, 7703, 2998, 6124, 1860, 1832, 1012, 2243, 8535, 9792, 4788, 5870, 534, 6380, 2141, 5500, 5896, 5677, 135, 2029, 3966, 5562, 9214, 8014, 686, 3832, 5919, 1697, 3842, 8668, 9372, 3978, 9418, 2359, 1698, 2371, 7732, 3571, 4868, 1731, 4279, 6539, 5278, 8062, 9844, 609, 8199, 9884, 6187, 8856, 965, 8071, 4572, 8143, 1738, 4968, 311, 630, 7322, 2541, 8724, 9312, 2561]
        subset_indices = [3931, 787, 9037, 2093, 3403, 6198, 4153, 9401, 8555, 6480, 1477, 7734, 2200, 9095, 3217, 6508, 6787, 7774, 8753, 3195, 5433, 2385, 298, 8668, 966, 5049, 1802, 1169, 5202, 1597, 1130, 223, 70, 7052, 7875, 5275, 5638, 898, 5441, 7044, 3046, 6796, 3661, 3740, 6143, 9969, 371, 1996, 3927, 3891, 4853, 3223, 8155, 1681, 9751, 3520, 4147, 5324, 9301, 8977, 2007, 1369, 3681, 9870, 2452, 9935, 5743, 6333, 6042, 2601, 6683, 7609, 478, 8845, 5886, 9830, 2925, 1575, 8978, 4339, 6462, 2027, 5059, 8897, 8953, 2667, 677, 8906, 8159, 1424, 2475, 6730, 7178, 1158, 5098, 9011, 7533, 9598, 3911, 3407, 9219, 8374, 5824, 3010, 2607, 2190, 8337, 9028, 8100, 3218, 7372, 9884, 3883, 6699, 5944, 7498, 7340, 751, 6619, 4148, 8956, 233, 2421, 3714, 1915, 4187, 7695, 1393, 2678, 1995, 1161, 8882, 6136, 2884, 5472, 2721, 84, 7900, 1114, 1828, 4580, 4769, 3009, 8649, 2196, 3674, 9535, 4281, 5238, 6972, 1809, 1718, 3559, 2098, 5140, 2457, 8450, 2302, 4542, 7337, 1038, 1432, 1540, 9919, 7239, 6291, 1101, 5324, 5136, 35, 7403, 7126, 5975, 2897, 8563, 276, 8893, 3334, 8461, 558, 858, 3840, 393, 6594, 973, 3030, 163, 1671, 8345, 89, 9470, 5926, 4830, 7840, 4200, 9457, 7081, 5307, 5075, 7901, 9334, 2244, 5877, 401, 175, 9469, 7387, 4376, 8069, 3356, 1887, 4454, 8290, 1860, 8342, 7624, 2334, 4033, 8871, 1738, 9796, 699, 2105, 8681, 9676, 1458, 8954, 5419, 400, 3312, 9167, 3859, 7466, 5339, 6708, 1373, 8989, 6925, 9961, 9404, 6573, 1892, 5266, 5121, 6344, 4770, 2506, 1398, 4477, 9519, 164, 4329, 3396, 4508, 2879, 1613, 1631, 3894, 3897, 8814, 6983, 8458, 5328, 2295, 8674, 7034, 4870, 4434, 9201, 8114, 3510, 977, 350, 7326, 9358, 6057, 4952, 4188, 3081, 7216, 2060, 8913, 2059, 277, 1988, 1324, 618, 6239, 5164, 8070, 6947, 6424, 3111, 7730, 9072, 4285, 2721, 5364, 736, 9366, 7434, 5246, 2920, 9535, 5407, 7768, 6199, 8621, 3312, 2945, 9461, 5093, 3298, 8497, 186, 8724, 8406, 6843, 9769, 9309, 1239, 7198, 1505, 9542, 4403, 253, 1579, 282, 6906, 7894, 7616, 7287, 870, 694, 8208, 2572, 4075, 435, 8718, 9967, 2828, 9941, 9298, 4536, 8576, 8074, 8659, 6814, 4040, 5515, 7980, 8782, 742, 7119, 2759, 8520, 1757, 2868, 5859, 7830, 2395, 4589, 1653, 6908, 1475, 8094, 5729, 2776, 2195, 8454, 3194, 9282, 2740, 2810, 2775, 1635, 1291, 1413, 6260, 4176, 5144, 3344, 2763, 4866, 4191, 9116, 5569, 8005, 779, 8885, 8645, 1299, 5861, 6932, 7442, 5353, 5058, 1421, 5829, 4625, 5082, 4344, 8629, 8088, 4833, 1251, 736, 772, 7405, 7700, 5690, 2472, 3275, 3714, 5092, 8290, 5569, 3738, 5447, 3842, 611, 4640, 7876, 9941, 5255, 8458, 9888, 9740, 7067, 2642, 2918, 5709, 2632, 2222, 9127, 4917, 9142, 7335, 8823, 5234, 9745, 5302, 4943, 8512, 2309, 3181, 9778, 5101, 9286, 945, 1877, 6426, 5042, 6693, 5866, 6204, 4630, 3082, 6596, 3786, 7820, 7690, 9825, 3403, 5803, 5448, 399, 7655, 474, 4439, 8000, 9025, 119, 5972, 8293, 1810, 689, 9312, 5991, 8546, 4006, 6478, 8707, 9881, 5626, 5389, 9469, 7737, 666, 3640, 7726, 5614, 654, 9194, 531, 2425, 7944, 5630, 2854, 7977, 4797, 753, 7536, 6869, 8740, 4418, 3525, 2810, 2971, 9519, 9346, 5006, 9415, 2206, 1251, 9253, 8076, 7949, 1197, 6741, 9082, 1213, 2294, 6322, 4984, 7998, 3446, 7075, 3663, 6907, 1160, 6927, 1614, 7869, 6938, 4049, 6983, 1690, 1726, 629, 5728, 9530, 3058, 5600, 5108, 420, 2279, 6550, 7239, 2445, 2358, 535, 2365, 4424, 6462, 3691, 6874, 2546, 6750, 8276, 5555, 8699, 404, 1220, 303, 794, 2214, 1375, 6221, 5957, 3869, 230, 7070, 1789, 6805, 1537, 2936, 7005, 6558, 6722, 6133, 5618, 4246, 1770, 417, 2766, 672, 5461, 5519, 1629, 8978, 4205, 7698, 8404, 2052, 6490, 8007, 8646, 9671, 1882, 9555, 4484, 4123, 8334, 4384, 9801, 1734, 8727, 5523, 8376, 7851, 280, 67, 697, 7792, 1018, 1187, 4226, 3311, 1752, 5996, 8384, 421, 4822, 4815, 9868, 5374, 433, 8967, 2833, 5386, 5421, 8851, 9471, 6794, 6850, 8408, 3916, 4862, 6920, 5018, 6625, 2855, 6983, 6792, 1430, 9160, 9523, 6100, 7110, 5331, 606, 3323, 8398, 4095, 5960, 9491, 2632, 9266, 7723, 2774, 377, 4547, 1080, 4013, 2576, 9600, 168, 8602, 1214, 5474, 266, 2754, 6240, 917, 8777, 2573, 5457, 5642, 9331, 3585, 759, 4979, 659, 2467, 9321, 2837, 2492, 959, 8353, 444, 2748, 6760, 3189, 4766, 4911, 1779, 5781, 4971, 3567, 9518, 8181, 2893, 8746, 2800, 4340, 892, 3822, 7755, 8167, 8793, 757, 870, 6267, 452, 2773, 1406, 1787, 8478, 2457, 4518, 5107, 7134, 9588, 9042, 8279, 1740, 8187, 7242, 6972, 7201, 1921, 2892, 3495, 417, 7954, 7568, 1751, 7951, 6964, 8515, 5557, 6844, 4709, 207, 5140, 985, 5353, 9499, 714, 3527, 8650, 6180, 5081, 650, 8424, 2025, 9194, 7185, 1890, 321, 1820, 5006, 9469, 9458, 3474, 5839, 8193, 8316, 2302, 7837, 9436, 2443, 9611, 9269, 8885, 6630, 3293, 7183, 4341, 3104, 5923, 7546, 8417, 2966, 8432, 7323, 2523, 2392, 1869, 8470, 5781, 5454, 2902, 6327, 6871, 9299, 8627, 375, 9219, 5296, 8261, 6970, 6440, 9416, 7475, 1754, 2137, 8365, 181, 2917, 5660, 5369, 5955, 8289, 206, 3450, 6610, 2115, 5530, 9779, 407, 3387, 4520, 197, 3585, 4576, 8411, 9924, 9884, 3611, 1220, 6801, 3264, 1345, 4822, 8530, 9536, 5469, 3198, 2094, 4712, 4345, 5896, 1133, 6915, 8677, 9905, 9037, 3460, 8398, 625, 485, 8901, 6767, 660, 3465, 4707, 8034, 9951, 9979, 7635, 8221, 3198, 4690, 4695, 4108, 5411, 1986, 3557, 3106, 3553, 462, 5581, 5048, 4177, 119, 9608, 861, 9203, 5022, 9921, 4891, 5698, 285, 3909, 1, 3327, 8060, 1754, 3228, 7108, 3632, 5388, 1165, 2799, 3193, 7903, 1819, 324, 2760, 8348, 3843, 9110, 9310, 8593, 9014, 4412, 4615, 4290, 1803, 7076, 630, 2054, 8183, 7630, 4213, 8118, 8109, 5619, 51, 7331, 8763, 8005, 7934, 5920, 9288, 688, 9459, 7734, 4209, 802, 7661, 3584, 2262, 7451, 6968, 1370, 7544, 6422, 7199, 8445, 3293, 8395, 2624, 2985, 2811, 8654, 5169, 5724, 460, 356, 8258, 7928, 9368, 355, 4905, 2073, 267, 231, 3340, 1558, 5377, 1992, 4370, 5017, 9984, 1916, 9055, 7130, 2212, 6744, 4372, 6677, 1939, 8008, 7356, 1515, 7606, 5127, 563, 4740, 5212, 8827, 4992, 8039, 2608, 9717, 2196, 7930, 1, 9271, 5828, 8779, 4722, 9631, 7058, 6197, 8390, 4385]
        subset_test = torch.utils.data.Subset(self.testset, subset_indices)
        testloader = torch.utils.data.DataLoader(subset_test, batch_size=self.confdata['testbatch'], shuffle=False, num_workers=2)
        testloader_s = torch.utils.data.DataLoader(subset_test, batch_size=1, shuffle=False, num_workers=2)

        return trainloader, testloader, self.trainset, testloader_s
